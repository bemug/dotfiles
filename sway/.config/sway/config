# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Colors
#
# More or less defaults
#set $background #323232
#set $text #FFFFFF
#set $primary #4C7899
#set $secondary #5F676A
#set $ternary #222222
#set $urgent #2F343A
#set $transparent #32323200

# Customs
# Inspired by Nord palette
set $background #323232
#set $text #eceff4
set $text #ffffff
set $primary #5e81ac
set $secondary #414d5e
set $ternary #222222
set $indicator #88c0d0
set $urgent #ff7b63
set $transparent #00000000

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | wmenu -b -S 5e81ac | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
# Color as background
#output * bg $background solid_color
# Custom wallpaper
output * bg ${HOME}/dotfiles/wallpaper.png fill $background
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

output DP-1 mode 1920x1080@144Hz pos 0 700
output HDMI-A-1 transform 90 pos 1920 0

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "type:keyboard" {
    xkb_layout fr,us
    xkb_numlock enabled
}
bindsym $mod+BackSpace input "type:keyboard" xkb_switch_layout next

input "type:pointer" {
    accel_profile "flat" # disable mouse acceleration (enabled by default; to set it manually, use "adaptive" instead of "flat")
    pointer_accel 0
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+ampersand workspace number 1
    bindsym $mod+eacute workspace number 2
    bindsym $mod+quotedbl workspace number 3
    bindsym $mod+apostrophe workspace number 4
    bindsym $mod+parenleft workspace number 5
    bindsym $mod+minus workspace number 6
    bindsym $mod+egrave workspace number 7
    bindsym $mod+underscore workspace number 8
    bindsym $mod+ccedilla workspace number 9
    bindsym $mod+agrave workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+ampersand move container to workspace number 1
    bindsym $mod+Shift+eacute move container to workspace number 2
    bindsym $mod+Shift+quotedbl move container to workspace number 3
    bindsym $mod+Shift+apostrophe move container to workspace number 4
    bindsym $mod+Shift+parenleft move container to workspace number 5
    bindsym $mod+Shift+minus move container to workspace number 6
    bindsym $mod+Shift+egrave move container to workspace number 7
    bindsym $mod+Shift+underscore move container to workspace number 8
    bindsym $mod+Shift+ccedilla move container to workspace number 9
    bindsym $mod+Shift+agrave move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # Move across screens
    bindsym $mod+m move workspace to output left
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+parenright move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+parenright scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px
    bindsym Shift+$left resize shrink width 1px
    bindsym Shift+$down resize grow height 1px
    bindsym Shift+$up resize shrink height 1px
    bindsym Shift+$right resize grow width 1px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px
    bindsym Shift+Left resize shrink width 1px
    bindsym Shift+Down resize grow height 1px
    bindsym Shift+Up resize shrink height 1px
    bindsym Shift+Right resize grow width 1px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Workspaces
#
# class                 border  bground text indicator child_border
client.focused          $primary $primary $text $indicator $primary
client.focused_inactive $secondary $secondary $text #484E50 $secondary
client.unfocused        $ternary $ternary #888888 $ternary $ternary
client.urgent           $urgent $urgent $text $urgent $urgent
client.placeholder      #000000 #0C0C0C $text #000000 #0C0C0C
client.background       $text

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    #status_command while date +'%Y-%m-%d %X'; do sleep 1; done
    status_command py3status

    colors {
        statusline $text
        background $transparent
        separator  $transparent

        focused_workspace  $primary $primary $text
        active_workspace   $secondary $secondary $text
        inactive_workspace $transparent $transparent #5c5c5c
        urgent_workspace   $urgent $urgent $text
        binding_mode       $urgent $urgent $text
        #i3 inactive workspace default
        #inactive_workspace #333333 #222222 #888888
    }
}

#
# Custom
#
# Bigger font + icons
font pango:monospace 9, FontAwesome 9
# Remove title bars
default_border pixel 3
# Gaps
#gaps inner 3
smart_gaps on
#Toggle microphone mute
bindsym XF86AudioMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && py3-cmd refresh volume
# Volume keys
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -1% && py3-cmd refresh volume
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +1% && py3-cmd refresh volume
# Spotify
bindsym $mod+Control+p exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous && py3-cmd refresh spotify
bindsym $mod+Control+n exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next && py3-cmd refresh spotify
bindsym $mod+Control+space exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause && py3-cmd refresh spotify
#Toggle sink
bindsym XF86Calculator exec pactl set-default-sink $(pactl list short sinks | grep -v $(pactl get-default-sink) | cut -f 1) && py3-cmd refresh external_script
# Second screen always starts with workspace 10
workspace 10 output HDMI-A-1
# Highlight Xwayland window
for_window [shell="xwayland"] title_format "XWayland : %title"
# Screenshots
bindsym --release Print exec GRIM_DEFAULT_DIR=Screenshots grim -g "$(slurp)" && notify-send 'Screenshot taken'
bindsym --release Shift+Print exec GRIM_DEFAULT_DIR=Screenshots grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') && notify-send 'Screenshot taken'
# Dunst
bindsym Control+Space exec dunstctl close
bindsym Control+Shift+Space exec dunstctl close-all
bindsym Control+twosuperior exec dunstctl history-pop
# Startup programs
exec --no-startup-id dunst
exec --no-startup-id steam -silent


include /etc/sway/config.d/*
